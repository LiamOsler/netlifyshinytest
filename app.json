[{"name": "app.py", "content": "import matplotlib.pyplot as plt\n\nfrom typing import List\nfrom shiny import *\nfrom shiny.types import NavSetArg\nfrom shiny.ui import h4\nfrom shiny import App, render, ui\n\n# global\ntickers = {\"AAPL\": \"Apple\", \"MSFT\": \"Microsoft\", \"GOOG\": \"Google\", \"AMZN\": \"Amazon\"}\n\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.tags.script(\n       \"\"\"\nconst dataURL = 'https://query2.finance.yahoo.com/v10/finance/quoteSummary/NVDA?modules=defaultKeyStatistics%2CassetProfile%2CtopHoldings%2CfundPerformance%2CfundProfile%2CesgScores&ssl=true';\nlet globalData;\nfetchData = async (URL) =>{\n  const response = fetch(URL);\n  const data = await response;\n  return data.json();\n}\nfetchData(dataURL).then(data => {\n  globalData = data;\n  buildPage(data)\n});\n\nlet search = window.parent.location.search.substring(1);\nlet searchArray = search.split('&');\nlet searchObject = {};\nfor(item of searchArray){\n    let array = item.split(/=(.*)/s);\n    let key = array[0];\n    let value = array[1];\n    searchObject[key] = value;\n}\n\n$(document).on('shiny:connected', function(event) {    fetch('https://query1.finance.yahoo.com/v11/finance/quoteSummary/aapl')\n        .then((response) => response.json())\n        .then((data) => {\n            console.log(data)\n        });        \n    Shiny.setInputValue(\"search_object\", JSON.stringify(searchObject));\n    Shiny.setInputValue(\"email\", searchObject['email']);\n    Shiny.setInputValue(\"name\", searchObject['name']);\n    Shiny.setInputValue(\"stocks\", searchObject['stocks']);\n}); \n       \"\"\"\n    ),\n    ui.h1(\"Stock Vision\"),\n    ui.h2(\"Query String:\"),\n    ui.output_text_verbatim(\"search\"),\n    ui.h2(\"Email:\"),\n    ui.output_text_verbatim(\"email\"),\n    ui.h2(\"Name:\"),\n    ui.output_text_verbatim(\"name\"),\n    ui.h2(\"Stocks:\"),\n    ui.output_text_verbatim(\"stocks\"),\n        ui.navset_pill(\n            ui.nav(\"predictions\", ui.output_ui(\"predictions_tab\")),\n            ui.nav(\"validation\", ui.output_ui(\"validation_tab\")),\n            ui.nav(\"playground\", ui.output_ui(\"playground_tab\")),\n            ui.nav(\"sandbox\", ui.output_ui(\"sandbox_tab\")),\n    )\n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def search():\n        return f\"Query String: {input.search_object()}\"\n    \n    @output\n    @render.text\n    def email():\n        return f\"User email: {input.email()}\"\n            \n    @output\n    @render.text\n    def name():\n        return f\"User name: {input.name()}\"\n\n    @output\n    @render.text\n    def stocks():\n        return f\"User stocks: {input.stocks().split(',')}\"\n    \n    @output\n    @render.ui\n    def predictions_tab():\n        return ui.TagList(\n        # main container div\n        ui.tags.div(\n            ui.input_select(id=\"ticker\", label=\"Ticker:\", choices=input.stocks().split(',')),\n            ui.output_plot(\"example_plot\"),\n            ui.output_table(\"example_table\"),\n            id=\"container\")\n        )\n    \n    # plot\n    @output\n    @render.plot\n    def example_plot():\n        # params\n\n        return fig\n\napp = App(app_ui, server)\n", "type": "text"}]